[{"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/index.js":"1","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/reportWebVitals.js":"2","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/App.js":"3","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/board/Board.js":"4","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/signup/index.js":"5","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/login/index.js":"6","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/firebase/configuration.js":"7","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/authContext/index.js":"8"},{"size":500,"mtime":1608520775904,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608520775905,"results":"11","hashOfConfig":"10"},{"size":1803,"mtime":1610036850449,"results":"12","hashOfConfig":"10"},{"size":5196,"mtime":1609001448009,"results":"13","hashOfConfig":"10"},{"size":131,"mtime":1609776331536,"results":"14","hashOfConfig":"10"},{"size":129,"mtime":1609776505149,"results":"15","hashOfConfig":"10"},{"size":438,"mtime":1610036419926,"results":"16","hashOfConfig":"10"},{"size":523,"mtime":1610036070971,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"m2xzc0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/index.js",[],["36","37"],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/reportWebVitals.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/App.js",["38","39","40","41","42","43","44"],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/board/Board.js",["45"],"import React, { Component, useState, useEffect } from 'react';\nimport './Board.css';\nconst calculateWinner = (squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    if (squares && squares.length) {\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a].value && squares[a].value === squares[b].value && squares[a].value === squares[c].value) {\n                return squares[a].value;\n            }\n        }\n    }\n    return null;\n}\nexport class SquareObj {\n    constructor(id = '', value = '') {\n        this.id = id;\n        this.value = value\n    }\n}\nconst Square = ({ value, onClickProp, winner }) => {\n    const [disabled, setDisabled] = useState(false);\n    useEffect(() => {\n        console.log('run effect', disabled);\n        if(!value && disabled){\n            // if the square receive an empty value and it was previously disabled, then enable it again\n            setDisabled(false);\n        }\n        return () => null\n    }, [value])\n    return (\n        <button className=\"square\" disabled={disabled} onClick={() => {\n            if( !winner ){\n                setDisabled(true)\n                onClickProp();\n            }\n        }}> { value }</button>\n    );\n}\nconst HistoryItem = ({ index, onClickFn }) => {\n    return <li onClick={() => onClickFn()}>Go to movement {index}</li>\n}\nconst MovementOrWinnerView = ({ boardActualGame, isPlayingX }) => {\n    const calculated = calculateWinner(boardActualGame);\n    if (boardActualGame && boardActualGame.length && calculated) {\n        return <h4>The winner is {calculated}</h4>\n    }\n    return <h4>The next movement is: {isPlayingX ? 'X': 'O'}</h4>\n}\nexport class Board extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isPlayingX: true,\n            boardActualGame: [],\n            historyGame: []\n        }\n    }\n    componentDidMount() {\n        this.setState(state => {\n            return {\n                ...state,\n                boardActualGame: this.fillInitialArray(9)\n            }\n        })\n    }\n    fillInitialArray(length_) {\n        var arr = new Array(length_);\n        for (var i = 0; i < length_; i++) {\n            arr[i] = new SquareObj(i)\n        }\n        return arr;\n    }\n    handleClick(index) {\n        console.log('click');\n        let { isPlayingX, boardActualGame, historyGame } = this.state;\n        if (!calculateWinner(boardActualGame)) {\n            let cloneActualGame = JSON.parse(JSON.stringify(boardActualGame));\n            historyGame = [...historyGame, cloneActualGame];\n            cloneActualGame[index].value = isPlayingX ? 'X' : 'O';\n            this.setState((state) => {\n                return {\n                    boardActualGame: cloneActualGame,\n                    isPlayingX: !isPlayingX,\n                    historyGame: historyGame\n                }\n            });\n        }\n    }\n    goToMovement(index) {\n        let { historyGame } = this.state;\n\n        let boardGameAt = historyGame[index - 1];\n        // index strts at 1\n        //  array.slice(start, end (not included))\n        //const animals = ['ant', 'bison'];\n        //console.log(animals.slice(0, 1));\n        // output:  [\"ant\"]\n        let gameHistoryAt = this.state.historyGame.slice(0, index)\n        this.setState(state => {\n            return {\n                ...state,\n                boardActualGame: boardGameAt,\n                historyGame: gameHistoryAt\n            }\n        })\n    }\n    renderSquare({ id, value }) {\n        return (\n            <Square\n                key={id}\n                value={value}\n                winner={!!calculateWinner(this.state.boardActualGame)}\n                onClickProp={() => this.handleClick(id)}\n            />\n        )\n    }\n    renderHistoryItem(index) {\n        return (\n            <HistoryItem\n                key={index}\n                index={index}\n                onClickFn={() => this.goToMovement(index)}\n            />\n        )\n\n    }\n    render() {\n        const { boardActualGame, historyGame, isPlayingX } = this.state;\n        const historyItems = [];\n        for (let index = 1; index < historyGame.length ; index++) {\n            historyItems.push(this.renderHistoryItem(index ))\n        }\n        return <div className=\"containerTic\">\n            <div className=\"boardWrapper\">\n                <div className=\"boardTitle\">\n                    <MovementOrWinnerView\n                    boardActualGame = { boardActualGame }\n                    isPlayingX = { isPlayingX }\n                    />\n                </div>\n                <div className=\"boardGrid\">\n                {\n                    boardActualGame.map(square => this.renderSquare(square))\n                }\n                </div>\n            </div>\n            <div className=\"historyGame\">\n                <h4>Game movements</h4>\n                <ul>\n                    \n                    {\n                        historyItems\n                    }\n                </ul>\n            </div>\n        </div>\n\n    }\n}\n\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/signup/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/login/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/firebase/configuration.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/authContext/index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":11,"nodeType":"52","messageId":"53","endLine":12,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":12,"column":18,"nodeType":"52","messageId":"53","endLine":12,"endColumn":26},{"ruleId":"50","severity":1,"message":"55","line":12,"column":28,"nodeType":"52","messageId":"53","endLine":12,"endColumn":35},{"ruleId":"50","severity":1,"message":"56","line":29,"column":15,"nodeType":"52","messageId":"53","endLine":29,"endColumn":24},{"ruleId":"50","severity":1,"message":"57","line":30,"column":15,"nodeType":"52","messageId":"53","endLine":30,"endColumn":27},{"ruleId":"50","severity":1,"message":"58","line":32,"column":15,"nodeType":"52","messageId":"53","endLine":32,"endColumn":20},{"ruleId":"50","severity":1,"message":"59","line":34,"column":15,"nodeType":"52","messageId":"53","endLine":34,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":39,"column":8,"nodeType":"62","endLine":39,"endColumn":15,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'match' is assigned a value but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'disabled'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [disabled, value]",{"range":"69","text":"70"},[1142,1149],"[disabled, value]"]