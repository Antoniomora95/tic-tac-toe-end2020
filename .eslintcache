[{"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/index.js":"1","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/reportWebVitals.js":"2","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/App.js":"3","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/signup/index.js":"4","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/login/index.js":"5","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/firebase/configuration.js":"6","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/authContext/index.js":"7","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/guard/index.js":"8","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/Header/index.js":"9","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/Board.js":"10","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/authService.js":"11","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/gameService.js":"12","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/common/Classes.js":"13","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/titleH3.js":"14","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/TitleH3.js":"15","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/AuthUser/index.js":"16","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/common/functions.js":"17","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/playerService.js":"18","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/ModalStartGame/index.js":"19","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/dashboard/dashboard.js":"20","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/gameOutlet.js":"21","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/Board2.js":"22","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/components/index.js":"23"},{"size":500,"mtime":1608520775904,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608520775905,"results":"26","hashOfConfig":"25"},{"size":1644,"mtime":1617498091818,"results":"27","hashOfConfig":"25"},{"size":1215,"mtime":1616376946703,"results":"28","hashOfConfig":"25"},{"size":1593,"mtime":1616639375749,"results":"29","hashOfConfig":"25"},{"size":981,"mtime":1615264548863,"results":"30","hashOfConfig":"25"},{"size":762,"mtime":1617156835544,"results":"31","hashOfConfig":"25"},{"size":1286,"mtime":1617558340032,"results":"32","hashOfConfig":"25"},{"size":999,"mtime":1617503275151,"results":"33","hashOfConfig":"25"},{"size":5422,"mtime":1617550290089,"results":"34","hashOfConfig":"25"},{"size":2231,"mtime":1617498072959,"results":"35","hashOfConfig":"25"},{"size":5168,"mtime":1617558242634,"results":"36","hashOfConfig":"25"},{"size":1356,"mtime":1617159298774,"results":"37","hashOfConfig":"25"},{"size":138,"mtime":1612137044235,"results":"38","hashOfConfig":"25"},{"size":138,"mtime":1612137044235,"results":"39","hashOfConfig":"25"},{"size":956,"mtime":1617485495769,"results":"40","hashOfConfig":"25"},{"size":1525,"mtime":1617561417551,"results":"41","hashOfConfig":"25"},{"size":2172,"mtime":1616289061241,"results":"42","hashOfConfig":"25"},{"size":2913,"mtime":1617551416988,"results":"43","hashOfConfig":"25"},{"size":4153,"mtime":1617555883094,"results":"44","hashOfConfig":"25"},{"size":1315,"mtime":1617503301595,"results":"45","hashOfConfig":"25"},{"size":3733,"mtime":1617765078000,"results":"46","hashOfConfig":"25"},{"size":876,"mtime":1617765900091,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"r54k1h",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/index.js",[],["102","103"],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/reportWebVitals.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/App.js",["104"],"\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport { BrowserRouter as Router, Route, Switch, useRouteMatch, Redirect, Link } from \"react-router-dom\";\nimport { Login } from './auth/login';\nimport { SignUp } from './auth/signup'\nimport { GameOutlet } from './game/gameOutlet';\nimport { AuthProvider } from './auth/authContext';\nimport { AuthGuardRoute } from './auth/guard/index';\nimport { Header } from './Header';\n\nfunction App() {\n  // tip, if your routes do not work maybe you need to change the order in the switch\n  return (\n    <div className=\"App\">\n      <AuthProvider>\n        <Header />\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <AuthGuardRoute  path=\"/\" component={ GameOutlet } />\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </div>\n  );\n}\n//IT SEEMS EXACT IN AuthGuardRoute WAS MESSING UP THE REDIRECT WHEN NO SESSION\n\nconst Task = () => {\n  let { path, url } = useRouteMatch();\n  return (<>\n    <h1>This is the title of route task</h1>\n    <Link to={`${url}on`}> go to one </Link>\n    <Link to={`${url}two`}> go to two </Link>\n    <Switch>\n      <Route  path={`${path}one`}><p>this is route one...</p></Route>\n      <Route  path={`${path}two`}><p>this is route two...</p></Route>\n      <Route  path={`${path}dashboard`} />\n      <Route  path=\"/\">\n        <Redirect to={\"/dasboard\"}></Redirect>\n      </Route>\n      <Route path=\"*\" render = {()=> <p>this is route not found...</p>}/>\n    </Switch>\n  </>\n\n  )\n}\n\nexport default App;\n\n//<Route exact path=\"**\" component={SignUp} />","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/signup/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/login/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/firebase/configuration.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/authContext/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/auth/guard/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/Header/index.js",["105"],"import React, { useContext, useEffect } from 'react';\nimport { TitleH3 } from '../components/TitleH3';\nimport { AuthContext } from '../auth/authContext';\nimport { AuthUserCard } from '../components/AuthUser/index';\nimport { isValidUser } from '../common/functions';\n\nexport const Header = ({history}) => {\n  const { currentUser } = useContext(AuthContext);\n  console.log('Header is running ---'); \n  return (\n    <header className='App-header has-background-primary has-text-white'>\n      <div className='columns m-0 height-100 is-mobile'>\n        <div className='column p-0 is-flex is-justify-content-center is-align-items-center'>\n          <TitleH3>Tic tac toe</TitleH3>\n        </div>\n        <div className='column p-0 is-flex is-justify-content-center is-align-items-center'>\n          {\n            isValidUser(currentUser) ? <AuthUserCard /> : <div className='is-size-6 has-text-white  has-text-weight-medium'>No logged user</div>\n          }\n        </div>\n      </div>\n    </header>\n  )\n}\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/Board.js",["106"],"import React, { Component, useState, useEffect } from 'react';\nimport { AuthContext } from '../../auth/authContext';\nimport {subscribeChangedGames, unsubscribeFromGames } from '../../services/gameService';\nimport './Board.css';\nconst calculateWinner = (squares) => {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    if (squares && squares.length) {\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a].value && squares[a].value === squares[b].value && squares[a].value === squares[c].value) {\n                return squares[a].value;\n            }\n        }\n    }\n    return null;\n}\nexport class SquareObj {\n    constructor(id = '', value = '') {\n        this.id = id;\n        this.value = value\n    }\n}\nconst Square = ({ value, onClickProp, winner }) => {\n    const [disabled, setDisabled] = useState(false);\n    useEffect(() => {\n        if(!value && disabled){\n            // if the square receive an empty value and it was previously disabled, then enable it again\n            setDisabled(false);\n        }\n        return () => null\n    }, [value])\n    return (\n        <button className=\"square\" disabled={disabled} onClick={() => {\n            if( !winner ){\n                setDisabled(true)\n                onClickProp();\n            }\n        }}> { value }</button>\n    );\n}\nconst HistoryItem = ({ index, onClickFn }) => {\n    return <li onClick={() => onClickFn()}>Go to movement {index}</li>\n}\nconst MovementOrWinnerView = ({ boardActualGame, isPlayingX }) => {\n    const calculated = calculateWinner(boardActualGame);\n    \n    if (boardActualGame && boardActualGame.length && calculated) {\n        return <h4>The winner is {calculated}</h4>\n    }\n    return <h4>The next movement is: {isPlayingX ? 'X': 'O'}</h4>\n}\nexport class Board extends Component {\n    static contextType = AuthContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPlayingX: true,\n            boardActualGame: [],\n            historyGame: []\n        }\n    }\n    componentDidMount() {\n        this.setState(state => {\n            return {\n                ...state,\n                boardActualGame: this.fillInitialArray(9)\n            }\n        });\n        const { currentUser: authPlayer } = this.context;\n        let { history } = this.props;\n        console.log('board...');\n        subscribeChangedGames(authPlayer, history)\n    }\n\n\n    componentWillUnmount(){\n        unsubscribeFromGames()\n    }\n    fillInitialArray(length_) {\n        var arr = new Array(length_);\n        for (var i = 0; i < length_; i++) {\n            arr[i] = new SquareObj(i)\n        }\n        return arr;\n    }\n\n\n\n\n\n\n    handleClick(index) {\n        let { isPlayingX, boardActualGame, historyGame } = this.state;\n        if (!calculateWinner(boardActualGame)) {\n            let cloneActualGame = JSON.parse(JSON.stringify(boardActualGame));\n            historyGame = [...historyGame, cloneActualGame];\n            cloneActualGame[index].value = isPlayingX ? 'X' : 'O';\n            this.setState((state) => {\n                return {\n                    boardActualGame: cloneActualGame,\n                    isPlayingX: !isPlayingX,\n                    historyGame: historyGame\n                }\n            });\n        }\n    }\n\n\n\n\n    goToMovement(index) {\n        let { historyGame } = this.state;\n\n        let boardGameAt = historyGame[index - 1];\n        let gameHistoryAt = this.state.historyGame.slice(0, index)\n        this.setState(state => {\n            return {\n                ...state,\n                boardActualGame: boardGameAt,\n                historyGame: gameHistoryAt\n            }\n        })\n    }\n\n    \n\n\n\n\n\n    renderSquare({ id, value }) {\n        return (\n            <Square\n                key={id}\n                value={value}\n                winner={!!calculateWinner(this.state.boardActualGame)}\n                onClickProp={() => this.handleClick(id)}\n            />\n        )\n    }\n\n\n\n    renderHistoryItem(index) {\n        return (\n            <HistoryItem\n                key={index}\n                index={index}\n                onClickFn={() => this.goToMovement(index)}\n            />\n        )\n\n    }\n\n\n\n\n\n\n    render() {\n        const { boardActualGame, historyGame, isPlayingX } = this.state;\n        const historyItems = [];\n\n\n        for (let index = 1; index < historyGame.length ; index++) {\n            historyItems.push(this.renderHistoryItem(index ))\n        }\n        \n\n\n        \n        return <div className=\"containerTic\">\n            <div className=\"boardWrapper\">\n                <div className=\"boardTitle\">\n                    <MovementOrWinnerView\n                    boardActualGame = { boardActualGame }\n                    isPlayingX = { isPlayingX }\n                    />\n                </div>\n                <div className=\"boardGrid\">\n                {\n                    boardActualGame.map(square => this.renderSquare(square))\n                }\n                </div>\n            </div>\n            <div className=\"historyGame\">\n                <h4>Game movements</h4>\n                <ul>\n                    \n                    {\n                        historyItems\n                    }\n                </ul>\n            </div>\n        </div>\n\n    }\n}\n\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/authService.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/gameService.js",["107"],"import { stringifyError, isValidUser, isExistentChallenge, getGameInstance } from \"../common/functions\";\nimport {   gamesRef } from \"../firebase/configuration\";\nimport { toogleExistentGame } from \"./playerService\";\nimport  { DB_REF_GAME_KEYS, DB_REF_GAME_AVAILABLE_STATUSES } from '../common/constants.json';\nimport { findOnePlayer } from \"./authService\";\nimport { CatGame } from \"../common/Classes\";\n\n\nconst handleCreateGame = async (authPlayer, challengedPlayer, disableView) => {\n    try {\n        // create the game model and store it in DB\n        disableView(true);\n        let { uid: authPlayerUid } = authPlayer;\n        let {uid: challengedPlayerUid } = challengedPlayer;\n\n        // get both players\n        const [player1, player2 ] = await Promise.all([findOnePlayer(authPlayerUid), findOnePlayer(challengedPlayerUid)]);\n        if((isValidUser(player1)) && isValidUser(player2)){\n            if(!isExistentChallenge(player1, player2)){\n                disableView(false);\n                let gameUid = gamesRef.push().key;\n                let game = new CatGame(gameUid, authPlayerUid, challengedPlayerUid);\n                let gameReference = gamesRef.child(gameUid);\n                let gameSet = await gameReference.set(game);\n                await Promise.all([toogleExistentGame(authPlayerUid, true), toogleExistentGame(challengedPlayerUid, true)]);\n            } else {\n                throw new Error(`There is an existent challenge for 1 or both players :(`);\n            }\n        } else {\n            throw new Error(`Auth player or Challenged player are not valid`);\n        }\n        return true;\n    } catch (error) {\n        console.log(stringifyError(error));\n    }\n}\n\nconst handleAcceptStartGame = async (game, gameStatus) =>  {\n    try {\n        let { uid: gameUid } = game;\n        let gameReference = gamesRef.child(gameUid);\n        await gameReference.child(DB_REF_GAME_KEYS.STATUS).set(gameStatus);\n    } catch (error) {\n        console.log(stringifyError(error));\n    }\n}\n\nconst handleDeclineCancelGame = async (game, gameStatus) =>  {\n        try {\n            let { uid: gameUid, player1: player1Uid, player2: player2Uid } = game;\n            let gameReference = gamesRef.child(gameUid);\n            await gameReference.child(DB_REF_GAME_KEYS.STATUS).set(gameStatus);\n            // release both players\n            await Promise.all([toogleExistentGame(player1Uid, false), toogleExistentGame(player2Uid, false)]);\n            return true;\n        } catch (error) {\n            console.log(stringifyError(error));\n        }     \n}\n\n\nconst subscribeAddedGames = ( authPlayer, setChallenge, setModalOpen ) => gamesRef.on('child_added', (childSnapshot, prevChildKey) => {\n    let game = childSnapshot.val();\n      // is_new status and auth player is challenged\n    if(game && gameHasStatus(game, DB_REF_GAME_AVAILABLE_STATUSES.IS_NEW) && isValidUser(authPlayer) && isChallengeForAuthPlayer(game, authPlayer)) {\n        setChallenge(game);\n        setModalOpen(true);\n    }\n    // I do not need to open the board page at first \n});\n\nconst subscribeChangedGames = ( authPlayer, history, updateAuthGame, setModalOpen, comp ) => gamesRef.on('child_changed', (childSnapshot, prevChildKey) => {\n    // accepted status, go to board both players\n    let game = childSnapshot.val();\n    if(game && gameHasStatus(game, DB_REF_GAME_AVAILABLE_STATUSES.ACCEPTED) && isValidUser(authPlayer) && (isChallengeFromAuthPlayer(game, authPlayer) || isChallengeForAuthPlayer(game, authPlayer))){\n        // close the moda\n        setModalOpen(false);\n        updateAuthGame(getGameInstance(game));\n        history.push(\"/board\");\n    }\n    // declined status, auth is challenger\n    else if(game && gameHasStatus(game, DB_REF_GAME_AVAILABLE_STATUSES.DECLINED) && isValidUser(authPlayer)){\n        //history.push(\"/\");\n        if(isChallengeFromAuthPlayer(game, authPlayer)){\n            console.log('your challenge was  declined');\n        } else if(isChallengeForAuthPlayer(game, authPlayer)){\n            // close the modal\n            setModalOpen(false);\n        }\n    }\n     // canceled status, auth is part of the game\n     else if(game && gameHasStatus(game, DB_REF_GAME_AVAILABLE_STATUSES.CANCELED) && isValidUser(authPlayer) && (isChallengeFromAuthPlayer(game, authPlayer) || isChallengeForAuthPlayer(game, authPlayer))){\n        // route the player to dashboard\n        console.log(game, 'official canceled'); \n        updateAuthGame();\n        history.push(\"/\")\n    } else {\n        console.log('fall in else started', comp, game);\n        // started ??\n        updateAuthGame(game);\n    }\n});\n\n\n\n\nconst unsubscribeFromGames = () => {\n    gamesRef.off();\n}\nfunction gameHasStatus(game, status) {\n    return game.status && game.status === status;\n}\nfunction isChallengeForAuthPlayer(game, authPlayer) {\n    return game && game.player2 && game.player2 === authPlayer.uid;\n}\nfunction isChallengeFromAuthPlayer(game, authPlayer) {\n    return game && game.player1 && game.player1 === authPlayer.uid;\n}\n\nexport {\n    handleCreateGame, handleAcceptStartGame, handleDeclineCancelGame, subscribeAddedGames, subscribeChangedGames, unsubscribeFromGames\n}\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/common/Classes.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/titleH3.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/TitleH3.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/AuthUser/index.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/common/functions.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/services/playerService.js",[],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/components/ModalStartGame/index.js",["108"],"import React, { useEffect, useState } from 'react';\nimport { stringifyError } from '../../common/functions';\nimport { findOnePlayer } from '../../services/authService';\nimport { handleAcceptStartGame, handleDeclineCancelGame } from '../../services/gameService';\nimport { DB_REF_GAME_AVAILABLE_STATUSES } from '../../common/constants.json'\n\nexport const ModalStartGame = ({ modalOpen, nameAuthPlayer, challenge }) => {\n  const [creator, setCreator] = useState({})\n  const [ countdown, setCountdown ] = useState(10);\n \n  useEffect(() => {\n    let isMounted = true;\n    let interval = null;\n    (async () => {\n      try {\n        if (challenge && challenge.uid && isMounted) {\n          interval = setInterval(() => {\n            setCountdown(countdown => countdown - 1);\n          }, 1000);\n          // who sent the challenge ?\n          let { player1: uid } = challenge;\n          let _creator = await findOnePlayer(uid);\n          setCreator(_creator);\n        }\n      } catch (error) {\n        console.log(stringifyError(error));\n      }\n    }\n    )()\n    return () => {\n      isMounted = false;\n      clearTimeout(interval)\n    }\n  }, [challenge]) \n  // check countdown and call handleDeclineGame\n  useEffect(() => {\n      ( async() => {\n        try {\n          if( countdown === 0 ){\n            handleDeclineCancelGame(challenge, DB_REF_GAME_AVAILABLE_STATUSES.DECLINED)\n          } \n        } catch (error) {\n          console.log(stringifyError(error));\n        }\n      })()\n      return () =>  null\n  }, [countdown])\n  return (\n    <div className={`modal ${setModalClasses(modalOpen)}`}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-card has-text-dark\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">New game challenge</p>\n          <small className=\"pr-2\">Sent on: {challenge.createdAt}</small>\n          <button className=\"delete\" aria-label=\"close\" onClick={() => handleDeclineCancelGame(challenge, DB_REF_GAME_AVAILABLE_STATUSES.DECLINED)}></button>\n        </header>\n        <section className=\"modal-card-body has-text-dark\">\n          Hey <strong>{nameAuthPlayer}</strong> would you like to accept the challenge from: <strong> {creator.name} ? </strong>\n        </section>\n        <footer className=\"modal-card-foot is-justify-content-space-between\">\n          <div>\n            <button className=\"button is-primary mr-6\" onClick={() => handleAcceptStartGame( challenge, DB_REF_GAME_AVAILABLE_STATUSES.ACCEPTED )} >Yes of course</button>\n            <button className=\"button is-danger\" onClick={() => handleDeclineCancelGame(challenge, DB_REF_GAME_AVAILABLE_STATUSES.DECLINED)}>Nope</button>\n          </div>\n          <small className=\"pr-2 has-text-danger\">You have { countdown } seconds </small>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nfunction setModalClasses(modalOpen) {\n  return modalOpen ? 'is-active' : ''\n}\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/dashboard/dashboard.js",["109"],"import React, { useContext, useEffect, useState } from 'react';\nimport { TitleH3 } from '../../components/TitleH3';\nimport { AuthContext } from '../../auth/authContext';\nimport { handleCreateGame } from '../../services/gameService';\nimport './dashboard.css';\nimport { gameNotAllowed, isExistentChallenge, isPlaying, isValidUser, stringifyError } from '../../common/functions';\nimport { subscribeAddedPlayers, subscribeChangedPlayers, unsubscribeFromPlayers } from '../../services/playerService';\nimport { subscribeAddedGames, unsubscribeFromGames, subscribeChangedGames } from '../../services/gameService';\nimport { ModalStartGame } from '../../components/ModalStartGame';\n\n\n\n// is mobile in columns allow you to keep the columns in small sizes\nconst PlayerOnline = ({ player, authPlayer, disableView, setDisableView }) => {\n\n    return <li>\n        <div className='columns is-mobile'>\n            <div className='column  is-4-desktop is-7-mobile has-text-centered-mobile overflow-hidden'>\n                {player.name}\n            </div>\n            <div className='column is-6-desktop is-hidden-mobile  overflow-hidden'>\n                {player.email}\n            </div>\n            <div className='column  is-2-desktop is-5-mobile is-flex is-justify-content-center is-align-items-center'>\n                <button className='button is-info is-size-7' disabled={disableView || gameNotAllowed(authPlayer, player) || isPlaying(player) || isExistentChallenge(authPlayer, player)} onClick={() => handleCreateGame(authPlayer, player, setDisableView)}> {isPlaying(player) ? `Is playing` : isExistentChallenge(authPlayer, player) ? `Not available` : `Start game`} {authPlayer.existentChallenge ? 'true' : 'false'}  </button>\n            </div>\n        </div>\n    </li>\n}\nconst renderPlayerOnline = (player, authPlayer, disableView, setDisableView) => {\n\n    return (\n        <PlayerOnline\n            key={player.uid}\n            player={player}\n            authPlayer={authPlayer}\n            disableView={disableView}\n            setDisableView={setDisableView}\n        />\n    )\n}\nexport const Dashboard = ({ history }) => {\n    const { currentUser: authPlayer } = useContext(AuthContext);\n    const { updateAuthGame } = useContext(AuthContext);\n\n    const [players, setPlayers] = useState([]);\n    const [challenge, setChallenge] = useState({});\n    const [modalOpen, setModalOpen] = useState(false);\n    const [disableView, setDisableView] = useState(false);\n\n// once you are logged in please ensure all your new, accepted, started games go to canceled ?? maybe  \n\n    const { name } = authPlayer;\n    useEffect(() => {\n        let isMounted = true;\n        (async () => {\n            try {\n                if (isMounted) {\n                    subscribeChangedPlayers(setPlayers);\n                    subscribeAddedPlayers(setPlayers);\n\n                    subscribeChangedGames(authPlayer, history, updateAuthGame, setModalOpen);\n                    subscribeAddedGames(authPlayer,  setChallenge, setModalOpen);\n                }\n            } catch (error) {\n                console.log(stringifyError(error));\n            }\n        })()\n        return () => {\n            // when commented you will see how react tries to update the state, but that reference no longer exist since the component was unmounted\n            unsubscribeFromPlayers();\n            unsubscribeFromGames();\n            isMounted = false;\n        } \n    }, [])\n    return (\n\n        <div className='container'>\n            \n\n            {\n                isValidUser(authPlayer) ? <>\n                    <div className='content'>\n                        <TitleH3 style={{ paddingTop: 15 }}>Users online</TitleH3>\n                        <ol>\n                            {\n                                players && players.length && players.map((player) => renderPlayerOnline(player, authPlayer, disableView, setDisableView))\n                            }\n                        </ol>\n                    </div> </> : <>...</>\n            }\n            {modalOpen && <ModalStartGame modalOpen={modalOpen} nameAuthPlayer={name} challenge={challenge} />}\n        </div>\n    )\n}\n","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/gameOutlet.js",["110"],"import React from 'react';\nimport { Switch, Route, Redirect, useRouteMatch, Link } from \"react-router-dom\";\nimport { GameGuardRoute } from '../auth/guard';\nimport { Board } from './board/Board';\nimport { Board2 } from './board/Board2';\nimport { Dashboard } from './dashboard/dashboard';\n\n\nexport const GameOutlet = () => {\n    let { path, url } = useRouteMatch();\n\n    \n    return (\n        <>\n            <h1>This is the title of route task</h1>\n            <Link to={`${url}on`}> One link </Link>\n            <Link to={`${url}two`}> Two link </Link>\n            <Link to={`${url}board`}> Board link </Link>\n            <Switch>\n                <Route exact path={`${path}one`}><p>this is route one...</p></Route>\n                <Route exact path={`${path}two`}><p>this is rohis is rohis is route two..ute two..ute two..</p></Route>\n                <GameGuardRoute exact path={`${path}board`} component= { Board2 }/>\n                <Route exact path={`${path}dashboard`} component= { Dashboard }/>\n                <Route exact path=\"/\">\n                    <Redirect to={\"/dashboard\"}></Redirect>\n                </Route>\n                \n                <Route path=\"*\" render={() => <p>this is route not found...</p>} />\n            </Switch>\n        </>\n    )\n}\n// <Route exact path=\"/*\" component={SignUp} />","/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/Board2.js",["111","112","113","114","115","116"],"/Users/antoniomora/Desktop/projects/react-projects/tic-tact-end2020/src/game/board/components/index.js",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":31,"column":7,"nodeType":"124","messageId":"125","endLine":31,"endColumn":11},{"ruleId":"122","severity":1,"message":"126","line":1,"column":29,"nodeType":"124","messageId":"125","endLine":1,"endColumn":38},{"ruleId":"127","severity":1,"message":"128","line":40,"column":8,"nodeType":"129","endLine":40,"endColumn":15,"suggestions":"130"},{"ruleId":"122","severity":1,"message":"131","line":24,"column":21,"nodeType":"124","messageId":"125","endLine":24,"endColumn":28},{"ruleId":"127","severity":1,"message":"132","line":47,"column":6,"nodeType":"129","endLine":47,"endColumn":17,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"134","line":75,"column":8,"nodeType":"129","endLine":75,"endColumn":10,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":15},{"ruleId":"122","severity":1,"message":"137","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":25},{"ruleId":"122","severity":1,"message":"138","line":4,"column":55,"nodeType":"124","messageId":"125","endLine":4,"endColumn":76},{"ruleId":"122","severity":1,"message":"139","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":40},{"ruleId":"122","severity":1,"message":"140","line":14,"column":11,"nodeType":"124","messageId":"125","endLine":14,"endColumn":21},{"ruleId":"122","severity":1,"message":"141","line":14,"column":23,"nodeType":"124","messageId":"125","endLine":14,"endColumn":28},{"ruleId":"127","severity":1,"message":"142","line":68,"column":8,"nodeType":"129","endLine":68,"endColumn":10,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"128","line":11,"column":8,"nodeType":"129","endLine":11,"endColumn":15,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Task' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'disabled'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'gameSet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'challenge'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'authPlayer', 'history', and 'updateAuthGame'. Either include them or remove the dependency array.",["149"],"'Board' is defined but never used.","'calculateWinner' is defined but never used.","'handleAcceptStartGame' is defined but never used.","'DB_REF_GAME_AVAILABLE_STATUSES' is defined but never used.","'isPlayingX' is assigned a value but never used.","'board' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentGame', 'currentUser', 'history', and 'updateAuthGame'. Either include them or remove the dependency array.",["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"152","fix":"160"},"Update the dependencies array to be: [disabled, value]",{"range":"161","text":"162"},"Update the dependencies array to be: [challenge, countdown]",{"range":"163","text":"164"},"Update the dependencies array to be: [authPlayer, history, updateAuthGame]",{"range":"165","text":"166"},"Update the dependencies array to be: [currentGame, currentUser, history, updateAuthGame]",{"range":"167","text":"168"},{"range":"169","text":"162"},[1240,1247],"[disabled, value]",[1512,1523],"[challenge, countdown]",[3433,3435],"[authPlayer, history, updateAuthGame]",[2660,2662],"[currentGame, currentUser, history, updateAuthGame]",[386,393]]